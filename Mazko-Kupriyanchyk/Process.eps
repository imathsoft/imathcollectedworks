%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The Mathworks, Inc. Version 7.5.0.342 (R2007b). Operating System: Microsoft Windows XP.
%%Title: D:\_M\ASPIRANTY\Lyudmyla Bogdanovich\Zbirnyk_dyn-2013\Archive\ABCD-5-1\Process.eps
%%CreationDate: 02/08/2013  21:56:12
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:    87   262   507   578
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/ISOLatin1Encoding where {pop /WindowsLatin1Encoding 256 array bdef
ISOLatin1Encoding WindowsLatin1Encoding copy pop
/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/.notdef
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis WindowsLatin1Encoding 128 32 getinterval astore pop}
{/WindowsLatin1Encoding StandardEncoding bdef} ifelse
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    87   262   507   578
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 1044 6936 csm

    0     0  5045  3782 rc
85 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 5046 3783 rf
6 w
0 3082 3910 0 0 -3082 656 3366 4 MP
PP
-3910 0 0 3082 3910 0 0 -3082 656 3366 5 MP stroke
4 w
DO
0 sg
 656 3366 mt  656  284 L
 656  284 mt  656  284 L
1438 3366 mt 1438  284 L
1438  284 mt 1438  284 L
2220 3366 mt 2220  284 L
2220  284 mt 2220  284 L
3002 3366 mt 3002  284 L
3002  284 mt 3002  284 L
3784 3366 mt 3784  284 L
3784  284 mt 3784  284 L
4566 3366 mt 4566  284 L
4566  284 mt 4566  284 L
 656 3366 mt 4566 3366 L
4566 3366 mt 4566 3366 L
 656 2980 mt 4566 2980 L
4566 2980 mt 4566 2980 L
 656 2595 mt 4566 2595 L
4566 2595 mt 4566 2595 L
 656 2210 mt 4566 2210 L
4566 2210 mt 4566 2210 L
 656 1825 mt 4566 1825 L
4566 1825 mt 4566 1825 L
 656 1439 mt 4566 1439 L
4566 1439 mt 4566 1439 L
 656 1054 mt 4566 1054 L
4566 1054 mt 4566 1054 L
 656  669 mt 4566  669 L
4566  669 mt 4566  669 L
 656  284 mt 4566  284 L
4566  284 mt 4566  284 L
SO
6 w
 656  284 mt 4566  284 L
 656 3366 mt 4566 3366 L
4566 3366 mt 4566  284 L
 656 3366 mt  656  284 L
 656 3366 mt 4566 3366 L
 656 3366 mt  656  284 L
 656 3366 mt  656 3326 L
 656  284 mt  656  323 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

 623 3511 mt 
(0) s
1438 3366 mt 1438 3326 L
1438  284 mt 1438  323 L
1355 3511 mt 
(0.2) s
2220 3366 mt 2220 3326 L
2220  284 mt 2220  323 L
2137 3511 mt 
(0.4) s
3002 3366 mt 3002 3326 L
3002  284 mt 3002  323 L
2919 3511 mt 
(0.6) s
3784 3366 mt 3784 3326 L
3784  284 mt 3784  323 L
3701 3511 mt 
(0.8) s
4566 3366 mt 4566 3326 L
4566  284 mt 4566  323 L
4533 3511 mt 
(1) s
 656 3366 mt  695 3366 L
4566 3366 mt 4526 3366 L
 485 3410 mt 
(-8) s
 656 2980 mt  695 2980 L
4566 2980 mt 4526 2980 L
 485 3024 mt 
(-6) s
 656 2595 mt  695 2595 L
4566 2595 mt 4526 2595 L
 485 2639 mt 
(-4) s
 656 2210 mt  695 2210 L
4566 2210 mt 4526 2210 L
 485 2254 mt 
(-2) s
 656 1825 mt  695 1825 L
4566 1825 mt 4526 1825 L
 555 1869 mt 
(0) s
 656 1439 mt  695 1439 L
4566 1439 mt 4526 1439 L
 555 1483 mt 
(2) s
 656 1054 mt  695 1054 L
4566 1054 mt 4526 1054 L
 555 1098 mt 
(4) s
 656  669 mt  695  669 L
4566  669 mt 4526  669 L
 555  713 mt 
(6) s
 656  284 mt  695  284 L
4566  284 mt 4526  284 L
 555  328 mt 
(8) s
 656  284 mt 4566  284 L
 656 3366 mt 4566 3366 L
4566 3366 mt 4566  284 L
 656 3366 mt  656  284 L
gs 656 284 3911 3083 rc
20.4 w
/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
16 0 16 0 15 0 16 0 48 0 47 -1 48 0 48 0 
51 0 51 0 51 0 51 0 48 0 47 0 48 0 48 0 
48 0 48 0 48 0 48 0 55 0 55 0 55 0 54 0 
52 1 52 0 52 0 52 0 48 0 48 1 48 0 49 0 
54 0 54 0 54 0 54 0 55 0 56 -1 55 0 55 -1 
52 -1 51 -1 51 -2 51 -1 56 -2 56 -3 56 -2 56 -3 
52 -3 51 -2 52 -3 51 -2 48 -3 48 -2 48 -1 48 -2 
49 -1 49 0 49 1 49 2 46 2 45 4 46 5 45 6 
35 5 36 6 35 7 35 8 29 6 28 8 28 7 29 9 
31 9 30 9 31 10 31 11 35 12 35 12 35 12 35 13 
32 10 33 11 32 10 32 9 25 7 25 6 25 5 24 5 
12 2 13 2 12 1 12 2 3 0 2 0 3 1 2 0 
1 0 1 0 656 1632 99 MP stroke
/c9 { 0.000000 0.500000 0.000000 sr} bdef
c9
16 0 16 0 15 0 16 0 48 0 47 0 48 0 48 0 
51 0 51 -1 51 0 51 -1 48 -1 47 -1 48 -1 48 -1 
48 -1 48 -2 48 -1 48 -2 55 -2 55 -2 55 -2 54 -1 
52 -2 52 -1 52 -1 52 0 48 1 48 1 48 2 49 3 
54 4 54 5 54 7 54 9 55 10 56 12 55 14 55 15 
52 16 51 16 51 16 51 17 56 18 56 17 56 15 56 12 
52 7 51 3 52 -3 51 -9 48 -15 48 -22 48 -31 48 -39 
49 -50 49 -61 49 -71 49 -81 46 -83 45 -92 46 -98 45 -104 
35 -84 36 -85 35 -86 35 -85 29 -67 28 -65 28 -62 29 -58 
31 -57 30 -51 31 -43 31 -34 35 -26 35 -10 35 6 35 25 
32 40 33 58 32 75 32 93 25 82 25 93 25 101 24 110 
12 57 13 59 12 61 12 61 3 13 2 12 3 13 2 12 
1 3 0 2 1 3 0 4 656 2210 101 MP stroke
/c10 { 1.000000 0.000000 0.000000 sr} bdef
c10
16 0 16 0 15 0 16 0 48 0 47 0 48 0 48 0 
51 0 51 0 51 0 51 0 48 0 47 0 48 0 48 0 
48 1 48 0 48 0 48 0 55 0 55 0 55 0 54 0 
52 0 52 0 52 0 52 0 48 -1 48 0 48 0 49 -1 
54 -1 54 -1 54 -1 54 -1 55 -2 56 -1 55 -2 55 -2 
52 -2 51 -2 51 -1 51 -2 56 -2 56 -1 56 -1 56 0 
52 0 51 1 52 2 51 3 48 3 48 4 48 5 48 6 
49 7 49 8 49 10 49 9 46 10 45 10 46 11 45 10 
35 8 36 7 35 8 35 6 29 5 28 4 28 3 29 3 
31 2 30 1 31 0 31 -2 35 -3 35 -6 35 -6 35 -9 
32 -9 33 -11 32 -11 32 -12 25 -9 25 -8 25 -9 24 -7 
12 -4 13 -2 12 -3 12 -2 3 0 2 -1 3 0 2 0 
1 0 1 0 -1 0 657 1824 100 MP stroke
/c11 { 0.000000 0.750000 0.750000 sr} bdef
c11
16 0 16 0 15 -1 16 0 48 0 47 -1 48 -1 48 -1 
51 -1 51 -1 51 -1 51 -1 48 -2 47 -1 48 -1 48 0 
48 -1 48 0 48 -1 48 1 55 1 55 1 55 2 54 3 
52 4 52 5 52 6 52 6 48 7 48 8 48 9 49 10 
54 11 54 12 54 11 54 12 55 12 56 10 55 8 55 6 
52 2 51 -1 51 -6 51 -10 56 -18 56 -25 56 -34 56 -42 
52 -48 51 -54 52 -63 51 -69 48 -70 48 -75 48 -77 48 -78 
49 -79 49 -76 49 -69 49 -60 46 -42 45 -28 46 -9 45 11 
35 26 36 41 35 58 35 76 29 75 28 87 28 99 29 111 
31 132 30 144 31 154 31 163 35 194 35 196 35 192 35 180 
32 148 33 121 32 84 32 36 25 -13 25 -55 25 -106 24 -163 
12 -105 13 -122 12 -142 12 -161 3 -34 2 -36 3 -36 2 -38 
1 -7 0 -8 1 -7 0 -14 656 1439 101 MP stroke
/c12 { 0.750000 0.000000 0.750000 sr} bdef
c12
16 0 16 0 15 0 16 0 48 0 47 0 48 0 48 0 
51 0 51 0 51 0 51 0 48 0 47 0 48 0 48 0 
48 0 48 0 48 0 48 -1 55 0 55 -1 55 -1 54 0 
52 -1 52 -1 52 -1 52 -1 48 -1 48 -1 48 -1 49 -1 
54 -1 54 -1 54 -1 54 0 55 -1 56 1 55 0 55 1 
52 2 51 2 51 2 51 3 56 4 56 4 56 5 56 6 
52 5 51 5 52 6 51 5 48 5 48 4 48 3 48 2 
49 2 49 0 49 -2 49 -3 46 -4 45 -6 46 -6 45 -8 
35 -7 36 -7 35 -7 35 -7 29 -4 28 -5 28 -3 29 -3 
31 -1 30 1 31 3 31 6 35 11 35 16 35 22 35 28 
32 31 33 38 32 45 32 51 25 44 25 47 25 52 24 54 
12 29 13 29 12 30 12 31 3 6 2 6 3 6 2 6 
1 2 0 1 1 1 0 2 656 1247 101 MP stroke
/c13 { 0.750000 0.750000 0.000000 sr} bdef
c13
16 0 16 0 15 0 16 0 48 0 47 0 48 0 48 0 
51 0 51 0 51 0 51 0 48 -1 47 0 48 0 48 0 
48 -1 48 0 48 -1 48 0 55 -1 55 -1 55 -1 54 0 
52 -1 52 -1 52 -1 52 0 48 -1 48 0 48 0 49 0 
54 0 54 1 54 1 54 2 55 2 56 3 55 4 55 4 
52 5 51 5 51 6 51 6 56 8 56 9 56 8 56 9 
52 9 51 8 52 8 51 8 48 6 48 5 48 5 48 4 
49 2 49 1 49 0 49 -1 46 -2 45 -3 46 -3 45 -3 
35 -2 36 -2 35 -1 35 0 29 2 28 2 28 4 29 6 
31 8 30 11 31 13 31 17 35 24 35 28 35 33 35 39 
32 41 33 45 32 49 32 53 25 43 25 45 25 45 24 47 
12 23 13 23 12 23 12 22 3 5 2 4 3 4 2 5 
1 1 1 1 0 2 656 1054 100 MP stroke
6 w
gr

c13

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF
